{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:\\\\Users\\\\cheng\\\\COMP90024_2021_ASSIGNMENT2\\\\Frontend-lei\\\\assignment2-map\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"C:\\\\Users\\\\cheng\\\\COMP90024_2021_ASSIGNMENT2\\\\Frontend-lei\\\\assignment2-map\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classPrivateFieldLooseKey\";\nimport papa from \"papaparse\";\nimport legendItems from \"../entities/LegendItems\"; //import { features } from \"../data/countries.json\";\n\nimport { features } from \"../data/state/AUS_state.json\";\n\nvar _processData = /*#__PURE__*/_classPrivateFieldLooseKey(\"processData\");\n\nvar _setCountryColor = /*#__PURE__*/_classPrivateFieldLooseKey(\"setCountryColor\");\n\nvar _formatNumberWithCommas = /*#__PURE__*/_classPrivateFieldLooseKey(\"formatNumberWithCommas\");\n\nclass LoadCountryTask {\n  constructor() {\n    this.url = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\n    this.setState = null;\n\n    this.load = setState => {\n      this.setState = setState;\n      papa.parse(this.url, {\n        download: true,\n        header: true,\n        complete: result => _classPrivateFieldLooseBase(this, _processData)[_processData](result.data)\n      });\n    };\n\n    Object.defineProperty(this, _processData, {\n      writable: true,\n      value: happyCountries => {\n        for (let i = 0; i < features.length; i++) {\n          const country = features[i];\n          const happyCountry = happyCountries.find(happyCountry => country.properties.ISO_A3 === happyCountry.ISO3);\n          country.properties.confirmed = 0;\n          country.properties.confirmedText = 0;\n\n          if (happyCountry != null) {\n            let confirmed = Number(happyCountry.Confirmed);\n            country.properties.confirmed = confirmed;\n            country.properties.confirmedText = _classPrivateFieldLooseBase(this, _formatNumberWithCommas)[_formatNumberWithCommas](confirmed);\n          }\n\n          _classPrivateFieldLooseBase(this, _setCountryColor)[_setCountryColor](country);\n        }\n\n        this.setState(features);\n      }\n    });\n    Object.defineProperty(this, _setCountryColor, {\n      writable: true,\n      value: country => {\n        const legendItem = legendItems.find(item => item.isFor(country.properties.confirmed));\n        if (legendItem != null) country.properties.color = legendItem.color;\n      }\n    });\n    Object.defineProperty(this, _formatNumberWithCommas, {\n      writable: true,\n      value: number => {\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      }\n    });\n  }\n\n}\n\nexport default LoadCountryTask;","map":{"version":3,"sources":["C:/Users/cheng/COMP90024_2021_ASSIGNMENT2/Frontend-lei/assignment2-map/src/tasks/LoadCountriesTask.js"],"names":["papa","legendItems","features","LoadCountryTask","url","setState","load","parse","download","header","complete","result","data","happyCountries","i","length","country","happyCountry","find","properties","ISO_A3","ISO3","confirmed","confirmedText","Number","Confirmed","legendItem","item","isFor","color","number","toString","replace"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,SAASC,QAAT,QAAyB,8BAAzB;;;;;;;;AAEA,MAAMC,eAAN,CAAsB;AAAA;AAAA,SACpBC,GADoB,GAElB,2FAFkB;AAAA,SAIpBC,QAJoB,GAIT,IAJS;;AAAA,SAMpBC,IANoB,GAMZD,QAAD,IAAc;AACnB,WAAKA,QAAL,GAAgBA,QAAhB;AAEAL,MAAAA,IAAI,CAACO,KAAL,CAAW,KAAKH,GAAhB,EAAqB;AACnBI,QAAAA,QAAQ,EAAE,IADS;AAEnBC,QAAAA,MAAM,EAAE,IAFW;AAGnBC,QAAAA,QAAQ,EAAGC,MAAD,gCAAY,IAAZ,8BAA8BA,MAAM,CAACC,IAArC;AAHS,OAArB;AAKD,KAdmB;;AAAA;AAAA;AAAA,aAgBJC,cAAD,IAAoB;AACjC,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,QAAQ,CAACa,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,gBAAME,OAAO,GAAGd,QAAQ,CAACY,CAAD,CAAxB;AACA,gBAAMG,YAAY,GAAGJ,cAAc,CAACK,IAAf,CAClBD,YAAD,IAAkBD,OAAO,CAACG,UAAR,CAAmBC,MAAnB,KAA8BH,YAAY,CAACI,IAD1C,CAArB;AAIAL,UAAAA,OAAO,CAACG,UAAR,CAAmBG,SAAnB,GAA+B,CAA/B;AACAN,UAAAA,OAAO,CAACG,UAAR,CAAmBI,aAAnB,GAAmC,CAAnC;;AAEA,cAAIN,YAAY,IAAI,IAApB,EAA0B;AACxB,gBAAIK,SAAS,GAAGE,MAAM,CAACP,YAAY,CAACQ,SAAd,CAAtB;AACAT,YAAAA,OAAO,CAACG,UAAR,CAAmBG,SAAnB,GAA+BA,SAA/B;AACAN,YAAAA,OAAO,CAACG,UAAR,CAAmBI,aAAnB,+BAAmC,IAAnC,oDACED,SADF;AAGD;;AACD,gFAAsBN,OAAtB;AACD;;AAED,aAAKX,QAAL,CAAcH,QAAd;AACD;AArCmB;AAAA;AAAA;AAAA,aAuCAc,OAAD,IAAa;AAC9B,cAAMU,UAAU,GAAGzB,WAAW,CAACiB,IAAZ,CAAkBS,IAAD,IAClCA,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACG,UAAR,CAAmBG,SAA9B,CADiB,CAAnB;AAIA,YAAII,UAAU,IAAI,IAAlB,EAAwBV,OAAO,CAACG,UAAR,CAAmBU,KAAnB,GAA2BH,UAAU,CAACG,KAAtC;AACzB;AA7CmB;AAAA;AAAA;AAAA,aA+COC,MAAD,IAAY;AACpC,eAAOA,MAAM,CAACC,QAAP,GAAkBC,OAAlB,CAA0B,uBAA1B,EAAmD,GAAnD,CAAP;AACD;AAjDmB;AAAA;;AAAA;;AAoDtB,eAAe7B,eAAf","sourcesContent":["import papa from \"papaparse\";\nimport legendItems from \"../entities/LegendItems\";\n//import { features } from \"../data/countries.json\";\nimport { features } from \"../data/state/AUS_state.json\"\n\nclass LoadCountryTask {\n  url =\n    \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\n\n  setState = null;\n\n  load = (setState) => {\n    this.setState = setState;\n\n    papa.parse(this.url, {\n      download: true,\n      header: true,\n      complete: (result) => this.#processData(result.data),\n    });\n  };\n\n  #processData = (happyCountries) => {\n    for (let i = 0; i < features.length; i++) {\n      const country = features[i];\n      const happyCountry = happyCountries.find(\n        (happyCountry) => country.properties.ISO_A3 === happyCountry.ISO3\n      );\n\n      country.properties.confirmed = 0;\n      country.properties.confirmedText = 0;\n\n      if (happyCountry != null) {\n        let confirmed = Number(happyCountry.Confirmed);\n        country.properties.confirmed = confirmed;\n        country.properties.confirmedText = this.#formatNumberWithCommas(\n          confirmed\n        );\n      }\n      this.#setCountryColor(country);\n    }\n\n    this.setState(features);\n  };\n\n  #setCountryColor = (country) => {\n    const legendItem = legendItems.find((item) =>\n      item.isFor(country.properties.confirmed)\n    );\n\n    if (legendItem != null) country.properties.color = legendItem.color;\n  };\n\n  #formatNumberWithCommas = (number) => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n}\n\nexport default LoadCountryTask;\n"]},"metadata":{},"sourceType":"module"}